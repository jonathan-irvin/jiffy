{"version":3,"sources":["firebaseConfig.js","components/MainMenu.jsx","components/NavBar.jsx","services/GiphyService.js","services/GifService.js","services/CategoryService.js","services/CategoryGifsService.js","components/GifDialog.jsx","components/GifGrid.jsx","helpers/Validation.js","components/SearchBar.jsx","scenes/Main.jsx","scenes/Inventory.jsx","components/CreateCategoryDialog.jsx","scenes/Categories.jsx","scenes/CategoryDetails.jsx","App.js","serviceWorker.js","index.js"],"names":["config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","useStyles","makeStyles","theme","root","flexGrow","height","menuButton","marginRight","spacing","title","link","textDecoration","color","MainMenu","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","anchorEl","setAnchorEl","handleClose","react_default","a","createElement","IconButton","edge","className","aria-label","onClick","event","currentTarget","Menu_default","Menu","id","keepMounted","open","Boolean","onClose","react_router_dom","to","MenuItem","NavBar","props","user","signOut","signInWithGoogle","AppBar","position","Toolbar","Typography","variant","Button","GIPHY_API","GiphyService","params","q","limit","offset","axios","get","GIPHY_BASEURL","api_key","rating","BASEURL","GifService","userId","gifData","post","put","delete","CategoryService","categoryName","categoryId","gifId","GifDialogRaw","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleCancel","onCancel","gif","handleOk","state","handleChange","setState","categories","nextProps","isLoading","addGifToProfile","uid","response","status","data","console","log","error","_context","t0","deleteGif","_context2","CategoryGifsService","addGifToCategory","_context3","removeGifFromCategory","_context4","url","_this2","_this$props","isProfile","isCategoryDetails","other","objectWithoutProperties","Dialog","assign","maxWidth","onEntering","handleEntering","aria-labelledby","DialogTitle","DialogContent","src","images","original","alt","style","display","marginLeft","DialogActions","map","category","saveGifToCategory","bind","removeGifFromInventory","saveGifToInventory","Component","GifDialog","handleClickListItem","_this3","value","window","location","reload","_this$props2","image","width","fixed_width_downsampled","fixed_height_downsampled","GifDialog_GifDialogRaw","paper","withStyles","backgroundColor","palette","background","margin","unit","extendedIcon","flexWrap","justifyContent","overflow","gridList","GifGrid","getAllCategories","_this$state","gifs","marginTop","length","GridList","cellHeight","cols","isWidthUp","GridListTile","key","components_GifDialog","withWidth","Validation","container","input","SearchBar","query","getTrendingGifs","gifSearch","getCurrentPage","getTrending","_this$setState","name","target","verifyLength","defineProperty","getGifs","_this$state5","pageNumber","_this$state6","queryState","Grid","item","xs","sm","md","lg","TextField","defaultValue","placeholder","helperText","inputProps","fullWidth","onChange","disabled","setFirstPage","pageDown","pageUp","clearSearch","components_GifGrid","Main","justify","components_SearchBar","direction","alignItems","align","Inventory","getAllGifs","t1","CreateCategoryDialogRaw","isValidated","createCategory","form","createRef","categoryState","results","alert","assertThisInitialized","keyCode","handleClick","esm_extends","ref","type","label","autoFocus","required","CreateCategoryDialog","handleOpen","List","CreateCategoryDialog_CreateCategoryDialogRaw","Categories","deleteCategory","Delete_default","components_CreateCategoryDialog","CategoryDetails","getCategoryGifs","match","App","forceUpdate","components_NavBar","firebaseAppAuth","react_router","path","exact","render","Main_Main","scenes_Inventory","Categories_Categories","CategoryDetails_CategoryDetails","firebase","firebaseConfig","auth","providers","googleProvider","GoogleAuthProvider","withFirebaseAuth","hostname","require","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.18fc008c.chunk.js","sourcesContent":["const config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n\n};\nexport default config;","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: '100%',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  link: {\n    textDecoration: 'none',\n    color: '#333',\n  },\n}));\n\nexport default function MainMenu() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  return (\n    <div>\n      <IconButton\n        edge=\"start\"\n        className={classes.menuButton}\n        color=\"inherit\"\n        aria-label=\"Menu\"\n        onClick={handleClick}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <Link to={'/'} className={classes.link}>\n          <MenuItem onClick={handleClose}>Find Gifs</MenuItem>\n        </Link>\n        <Link to={'/inventory'} className={classes.link}>\n          <MenuItem onClick={handleClose}>My GIF Inventory</MenuItem>\n        </Link>\n        <Link to={'/categories'} className={classes.link}>\n          <MenuItem onClick={handleClose}>My Categories</MenuItem>\n        </Link>\n      </Menu>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport MainMenu from './MainMenu';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: '100%',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction NavBar(props) {\n  const classes = useStyles();\n  const { user, signOut, signInWithGoogle } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <MainMenu />\n          <Typography variant=\"h6\" className={classes.title}>\n            Jiffy\n          </Typography>\n\n          {user ? (\n            <Button color=\"inherit\" variant=\"outlined\" onClick={signOut}>\n              Log Out\n            </Button>\n          ) : (\n            <Button color=\"inherit\" onClick={signInWithGoogle}>\n              Sign in with Google\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import axios from 'axios';\nconst GIPHY_API = process.env.REACT_APP_GIPHY_API_KEY;\nconst GIPHY_BASEURL = process.env.REACT_APP_GIPHY_BASEURL;\n\nclass GiphyService {\n  static async gifSearch(params) {\n    let { q, limit, offset } = params;\n    try {\n      return await axios.get(GIPHY_BASEURL + 'gifs/search', {\n        params: { api_key: GIPHY_API, q, limit, offset, rating: 'g' },\n      });\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  static async getTrending(params) {\n    let { limit, offset } = params;\n    try {\n      return await axios.get(GIPHY_BASEURL + 'gifs/trending', {\n        params: { api_key: GIPHY_API, limit, offset, rating: 'g' },\n      });\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n\nexport default GiphyService;\n","import axios from 'axios';\nconst BASEURL = process.env.REACT_APP_API_BASEURL;\nexport default class GifService {\n  static async addGifToProfile(userId, gifData) {\n    try {\n      return await axios.post(BASEURL + 'gif', {\n        userId: userId,\n        gifData: gifData,\n      });\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  static async getGif(id) {\n    try {\n      return await axios.get(BASEURL + 'gif/' + id);\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  static async getAllGifs() {\n    try {\n      return await axios.get(BASEURL + 'gifs');\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  static async getAllGifsByOwner(id) {\n    try {\n      return await axios.get(BASEURL + 'gifs/' + id);\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  static async updateGif(id, gifData) {\n    try {\n      return await axios.put(BASEURL + 'gif/' + id, { gifData: gifData });\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  static async deleteGif(id) {\n    try {\n      return await axios.delete(BASEURL + 'gif/' + id);\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n","import axios from 'axios';\nconst BASEURL = process.env.REACT_APP_API_BASEURL;\nexport default class CategoryService {\n  static async createCategory(userId, categoryName) {\n    try {\n      return await axios.post(BASEURL + 'category', {\n        userId: userId,\n        categoryName: categoryName,\n      });\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  static async getCategory(id) {\n    try {\n      return await axios.get(BASEURL + 'category/' + id);\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  static async getAllCategories() {\n    try {\n      return await axios.get(BASEURL + 'categories');\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  static async updateCategory(id, categoryName) {\n    try {\n      return await axios.put(BASEURL + 'category/' + id, {\n        categoryName: categoryName,\n      });\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  static async deleteCategory(id) {\n    try {\n      return await axios.delete(BASEURL + 'category/' + id);\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n","import axios from 'axios';\nconst BASEURL = process.env.REACT_APP_API_BASEURL;\n\nexport default class CategoryService {\n  static async addGifToCategory(categoryId, gifId) {\n    try {\n      return await axios.post(\n        BASEURL + 'category/' + categoryId + '/gif/' + gifId\n      );\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  static async getCategoryGifs(id) {\n    try {\n      return await axios.get(BASEURL + 'category/' + id + '/gifs/');\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  static async removeGifFromCategory(id) {\n    try {\n      return await axios.delete(BASEURL + 'category/gif/' + id);\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport { GifService, CategoryGifsService } from '../services';\n\nclass GifDialogRaw extends React.Component {\n  constructor(props) {\n    super();\n    this.state = { gif: props.gif, categories: null };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.gif !== this.props.gif) {\n      this.setState({ gif: this.props.gif });\n    }\n  }\n\n  handleCancel = () => {\n    this.props.onCancel(this.props.gif);\n  };\n\n  handleOk = () => {\n    this.props.onClose(this.state.gif);\n  };\n\n  handleChange = (event, user) => {\n    this.setState({ user });\n  };\n\n  async saveGifToInventory(gif) {\n    const { user } = this.props;\n\n    this.setState({ isLoading: true });\n    try {\n      let response = await GifService.addGifToProfile(user.uid, gif);\n      if (response && response.status === 200) {\n        let data = response.data;\n        console.log('Gif Saved to Profile', data);\n        this.handleOk();\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async removeGifFromInventory(id) {\n    this.setState({ isLoading: true });\n    try {\n      let response = await GifService.deleteGif(id);\n      if (response && response.status === 200) {\n        let data = response.data;\n        console.log('Gif removed from profile', data);\n        this.handleOk();\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async saveGifToCategory(categoryId) {\n    const { gifId } = this.props;\n\n    this.setState({ isLoading: true });\n    try {\n      let response = await CategoryGifsService.addGifToCategory(\n        categoryId,\n        gifId\n      );\n      if (response && response.status === 200) {\n        let data = response.data;\n        console.log('Gif Saved to Category', data);\n        this.handleOk();\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async removeGifFromCategory(id) {\n    this.setState({ isLoading: true });\n    try {\n      let response = await CategoryGifsService.removeGifFromCategory(id);\n      if (response && response.status === 200) {\n        let data = response.data;\n        console.log('Gif removed from category', data);\n        this.handleOk();\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  onError() {\n    this.setState({\n      url: null,\n    });\n  }\n\n  render() {\n    const {\n      gif,\n      gifId,\n      isProfile,\n      isCategoryDetails,\n      categories,\n      ...other\n    } = this.props;\n\n    return (\n      gif && (\n        <Dialog\n          maxWidth=\"md\"\n          onEntering={this.handleEntering}\n          aria-labelledby=\"confirmation-dialog-title\"\n          {...other}\n        >\n          <DialogTitle id=\"confirmation-dialog-title\">{gif.title}</DialogTitle>\n          <DialogContent>\n            <img\n              src={gif.images.original.url}\n              alt={'Gif'}\n              style={{\n                display: 'block',\n                marginLeft: 'auto',\n                marginRight: 'auto',\n              }}\n            />\n          </DialogContent>\n          <DialogActions>\n            {isProfile && (\n              <div>\n                {categories &&\n                  categories.map(category => {\n                    return (\n                      <Button\n                        onClick={this.saveGifToCategory.bind(\n                          this,\n                          category.id,\n                          gifId\n                        )}\n                        color=\"primary\"\n                      >\n                        Save to {category.categoryName}\n                      </Button>\n                    );\n                  })}\n                <Button\n                  onClick={this.removeGifFromInventory.bind(this, gifId)}\n                  color=\"primary\"\n                >\n                  Remove\n                </Button>\n              </div>\n            )}\n            {!isProfile && !isCategoryDetails ? (\n              <Button\n                onClick={this.saveGifToInventory.bind(this, gif)}\n                color=\"primary\"\n              >\n                Save\n              </Button>\n            ) : (\n              ''\n            )}\n            {isCategoryDetails && gifId ? (\n              <Button\n                onClick={this.removeGifFromCategory.bind(this, gifId)}\n                color=\"primary\"\n              >\n                Remove\n              </Button>\n            ) : (\n              ''\n            )}\n            <Button onClick={this.handleCancel} color=\"primary\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )\n    );\n  }\n}\n\nGifDialogRaw.propTypes = {\n  onClose: PropTypes.func,\n};\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 640,\n    backgroundColor: theme.palette.background.paper,\n  },\n  paper: {\n    width: '80%',\n    height: 640,\n  },\n\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  extendedIcon: {\n    marginRight: theme.spacing.unit,\n  },\n});\n\nclass GifDialog extends React.Component {\n  state = {\n    open: false,\n  };\n\n  handleClickListItem = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = value => {\n    this.setState({ value, open: false });\n    window.location.reload();\n  };\n  handleCancel = value => {\n    this.setState({ value, open: false });\n  };\n\n  render() {\n    const {\n      classes,\n      user,\n      isProfile,\n      gif,\n      gifId,\n      categories,\n      isCategoryDetails,\n    } = this.props;\n\n    let image =\n      gif.images && gif.images.original.height > gif.images.original.width\n        ? gif.images.fixed_width_downsampled.url\n        : gif.images.fixed_height_downsampled.url;\n\n    let width =\n      gif.images && gif.images.original.height > gif.images.original.width\n        ? gif.images.fixed_width_downsampled.width\n        : gif.images.fixed_height_downsampled.width;\n    let height =\n      gif.images && gif.images.original.height > gif.images.original.width\n        ? gif.images.fixed_width_downsampled.height\n        : gif.images.fixed_height_downsampled.height;\n    return (\n      gif && (\n        <div className={classes.root}>\n          <img\n            src={image}\n            alt={'Gif'}\n            onClick={this.handleClickListItem}\n            height={height}\n            width={width}\n          />\n          <GifDialogRaw\n            classes={{ paper: classes.paper }}\n            open={this.state.open}\n            onClose={this.handleClose}\n            onCancel={this.handleCancel}\n            user={user}\n            gif={gif}\n            gifId={gifId}\n            isProfile={isProfile}\n            isCategoryDetails={isCategoryDetails}\n            categories={categories}\n          />\n        </div>\n      )\n    );\n  }\n}\n\nGifDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(GifDialog);\n","import React, { Component } from 'react';\nimport { Typography } from '@material-ui/core';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport { makeStyles } from '@material-ui/core/styles';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\nimport { CategoryService } from '../services';\n\nimport GifDialog from './GifDialog';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 500,\n    height: 450,\n  },\n}));\n\nclass GifGrid extends Component {\n  state = { classes: null, categories: null };\n  componentWillMount() {\n    this.setState({ classes: useStyles });\n    this.getAllCategories();\n  }\n  async getAllCategories() {\n    try {\n      let response = await CategoryService.getAllCategories();\n      if (response && response.status === 200) {\n        let data = response.data;\n\n        this.setState({\n          categories: data,\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  render() {\n    let { classes, categories } = this.state;\n    let { gifs, user, width, isProfile, isCategoryDetails } = this.props;\n\n    const getGridListCols = () => {\n      if (isWidthUp('xl', width)) {\n        return 6;\n      }\n\n      if (isWidthUp('lg', width)) {\n        return 4;\n      }\n\n      if (isWidthUp('md', width)) {\n        return 3;\n      }\n\n      if (isWidthUp('sm', width)) {\n        return 2;\n      }\n\n      return 1;\n    };\n    return (\n      <div style={{ marginTop: 24 }}>\n        <Typography variant=\"h5\">{this.props.title}</Typography>\n\n        {gifs && gifs.length >= 1 ? (\n          <div className={classes.root}>\n            <GridList\n              cellHeight={'auto'}\n              className={classes.gridList}\n              cols={getGridListCols()}\n            >\n              {gifs.map(gif => {\n                return (\n                  <GridListTile key={gif.id} cols={gif.cols || 1}>\n                    <GifDialog\n                      gif={isProfile || isCategoryDetails ? gif.gifData : gif}\n                      gifId={(isProfile || isCategoryDetails) && gif.id}\n                      isProfile={isProfile}\n                      isCategoryDetails={isCategoryDetails}\n                      user={user}\n                      categories={categories}\n                    />\n                  </GridListTile>\n                );\n              })}\n            </GridList>\n          </div>\n        ) : (\n          <Typography variant=\"h5\" style={{ marginTop: 50 }}>\n            No Results\n          </Typography>\n        )}\n      </div>\n    );\n  }\n}\nexport default withWidth()(GifGrid);\n","class Validation {\n  static verifyLength(value, length) {\n    return value.length >= length;\n  }\n}\n\nexport default Validation;\n","import React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport GifGrid from './GifGrid';\nimport { GiphyService } from '../services';\nimport { Validation } from '../helpers';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  input: {\n    margin: theme.spacing(1),\n  },\n}));\n\nclass SearchBar extends Component {\n  state = {\n    classes: null,\n    gifs: null,\n    title: 'Trending',\n    limit: 20,\n    offset: 0,\n    query: null,\n  };\n\n  componentWillMount() {\n    this.setState({ classes: useStyles });\n    this.getTrendingGifs(20, 0);\n  }\n\n  async getGifs(query) {\n    let { limit, offset } = this.state;\n\n    try {\n      let response = await GiphyService.gifSearch({\n        q: query,\n        limit,\n        offset,\n      });\n      if (response && response.status === 200) {\n        let data = response.data && response.data.data;\n        this.setState({\n          gifs: data,\n          title: query\n            ? 'Showing  ' +\n              limit +\n              ' ' +\n              query +\n              ' GIFs' +\n              this.getCurrentPage()\n            : 'Search for GIFs',\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async getTrendingGifs() {\n    let { limit, offset } = this.state;\n\n    try {\n      let response = await GiphyService.getTrending({ limit, offset });\n      if (response && response.status === 200) {\n        let data = response.data && response.data.data;\n        this.setState({\n          gifs: data,\n          title: 'Showing ' + limit + ' Trending GIFs' + this.getCurrentPage(),\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  onChange(event) {\n    let state = '';\n    const name = event.target.name,\n      value = event.target.value;\n\n    switch (name) {\n      case 'query':\n        state = Validation.verifyLength(value, 1) ? 'success' : 'error';\n\n        break;\n      default:\n        break;\n    }\n\n    this.setState({\n      [name]: value,\n      [name + 'State']: state,\n      offset: 0,\n    });\n\n    this.getGifs(value);\n  }\n\n  async pageUp() {\n    const { limit, offset, query } = this.state;\n    await this.setState({ offset: offset + limit });\n    if (query) {\n      this.getGifs(query);\n    } else {\n      this.getTrendingGifs();\n    }\n  }\n\n  async pageDown() {\n    const { limit, offset, query } = this.state;\n    await this.setState({ offset: offset % limit === 0 ? offset - limit : 0 });\n    if (query) {\n      this.getGifs(query);\n    } else {\n      this.getTrendingGifs();\n    }\n  }\n\n  async setFirstPage() {\n    const { query } = this.state;\n    await this.setState({ offset: 0 });\n    if (query) {\n      this.getGifs(query);\n    } else {\n      this.getTrendingGifs();\n    }\n  }\n\n  clearSearch() {\n    this.setState({ limit: 20, offset: 0, query: null });\n    this.getTrendingGifs();\n  }\n\n  getCurrentPage() {\n    const { limit, offset } = this.state;\n    const pageNumber = offset / limit + 1;\n    return pageNumber > 1 ? ' - Page ' + pageNumber : '';\n  }\n\n  render() {\n    let {\n      classes,\n      gifs,\n      title,\n      queryState,\n      offset,\n      limit,\n\n      query,\n    } = this.state;\n    return (\n      <div className={classes.container}>\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={12} md={6} lg={4}>\n            <TextField\n              defaultValue=\"\"\n              placeholder=\"Search for GIFs\"\n              error={queryState === 'error'}\n              helperText={\n                queryState === 'error' ? 'Please type something to search' : ''\n              }\n              className={classes.input}\n              inputProps={{\n                'aria-label': 'Search',\n              }}\n              name=\"query\"\n              fullWidth\n              onChange={this.onChange.bind(this)}\n            />\n          </Grid>\n          <Grid item xs={12} sm={12} md={6} lg={8}>\n            <Button\n              disabled={offset === 0}\n              onClick={this.setFirstPage.bind(this)}\n            >\n              First Page\n            </Button>\n            <Button disabled={offset === 0} onClick={this.pageDown.bind(this)}>\n              Prev Page\n            </Button>\n            <Button\n              disabled={gifs && gifs.length < limit}\n              onClick={this.pageUp.bind(this)}\n            >\n              Next Page\n            </Button>\n            <Button\n              disabled={query === null}\n              onClick={this.clearSearch.bind(this)}\n              style={query === null ? { color: 'gray' } : { color: 'red' }}\n              variant=\"outlined\"\n            >\n              Reset\n            </Button>\n          </Grid>\n          <Grid item xs={12}>\n            <GifGrid title={title} gifs={gifs} user={this.props.user} />\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from 'react';\nimport SearchBar from '../components/SearchBar';\nimport { Grid, Typography } from '@material-ui/core';\n\nexport default class Main extends Component {\n  render() {\n    const { user } = this.props;\n    return (\n      <div style={{ margin: 12 }}>\n        {user ? (\n          <Grid container spacing={8} justify=\"center\">\n            <Grid item xs={12}>\n              <SearchBar user={user} />\n            </Grid>\n          </Grid>\n        ) : (\n          <Grid\n            container\n            spacing={8}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item xs={3}>\n              <Typography align=\"center\">\n                Please sign in to save GIFs!\n              </Typography>\n            </Grid>\n          </Grid>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport GifGrid from '../components/GifGrid';\nimport { GifService } from '../services';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  input: {\n    margin: theme.spacing(1),\n  },\n}));\n\nclass Inventory extends Component {\n  state = {\n    classes: null,\n    gifs: null,\n    title: 'My GIFs',\n    limit: 20,\n    offset: 0,\n    query: null,\n    isLoading: true,\n  };\n  componentWillMount() {\n    this.setState({ classes: useStyles });\n  }\n  componentDidMount() {\n    this.getGifs();\n  }\n\n  async getGifs() {\n    let { user } = this.props;\n\n    this.setState({ isLoading: true });\n    try {\n      let response = user && (await GifService.getAllGifs(user.uid));\n      if (response && response.status === 200) {\n        let data = response.data;\n        this.setState({\n          gifs: data,\n          title: 'Showing My GIFs',\n          isLoading: false,\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  render() {\n    let {\n      classes,\n      gifs,\n      title,\n\n      isLoading,\n    } = this.state;\n    return (\n      <div className={classes.container}>\n        <Grid container spacing={1}>\n          <Grid item xs={12}>\n            {isLoading ? (\n              'LOADING...'\n            ) : (\n              <GifGrid\n                title={title}\n                gifs={gifs}\n                user={this.props.user}\n                isProfile\n              />\n            )}\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","import Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport List from '@material-ui/core/List';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Validation } from '../helpers';\nimport { CategoryService } from '../services';\n\nclass CreateCategoryDialogRaw extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.form = React.createRef();\n\n    this.state = {\n      category: '',\n      categoryState: '',\n      results: '',\n      alert: null,\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.handleOk = this.handleOk.bind(this);\n  }\n\n  async createCategory() {\n    const { user } = this.props;\n    const { category } = this.state;\n    this.setState({ isLoading: true });\n    try {\n      let response = await CategoryService.createCategory(user.uid, category);\n      if (response && response.status === 200) {\n        this.props.onClose();\n        window.location.reload();\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  handleCancel = () => {\n    this.props.onClose(this.props.category);\n  };\n\n  handleOk = () => {\n    let isValidated = this.isValidated();\n    if (isValidated) {\n      this.createCategory();\n    }\n  };\n\n  onKeyDown(event) {\n    if (event.keyCode === 13) {\n      this.handleClick();\n    }\n  }\n\n  onChange(event) {\n    let name = event.target.name,\n      value = event.target.value,\n      state = '';\n\n    //Validate\n    switch (name) {\n      case 'category':\n        state = Validation.verifyLength(value, 1) ? 'success' : 'error';\n        break;\n      default:\n        break;\n    }\n    console.log(state);\n    this.setState({\n      [name + 'State']: state,\n      [name]: value,\n    });\n  }\n\n  isValidated() {\n    return this.state.categoryState === 'success' ? true : false;\n  }\n\n  render() {\n    const { ...other } = this.props;\n    let { category, categoryState } = this.state;\n    return (\n      <Dialog\n        maxWidth=\"md\"\n        onEntering={this.handleEntering}\n        aria-labelledby=\"confirmation-dialog-title\"\n        {...other}\n      >\n        <DialogTitle id=\"confirmation-dialog-title\">\n          Create new category\n        </DialogTitle>\n        <DialogContent>\n          <div ref={this.form}>\n            <TextField\n              type=\"text\"\n              error={categoryState === 'error'}\n              helperText={categoryState === 'error' ? \"Can't be blank\" : ''}\n              label=\"Category Name\"\n              name=\"category\"\n              className=\"form-input\"\n              onChange={this.onChange}\n              autoFocus\n              required\n              fullWidth\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          {\n            <Button onClick={this.handleCancel} color=\"primary\">\n              Cancel\n            </Button>\n          }\n          {\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.handleOk}\n              disabled={!category || categoryState === 'error'}\n            >\n              Submit\n            </Button>\n          }\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nCreateCategoryDialogRaw.propTypes = {\n  onClose: PropTypes.func,\n};\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  paper: { width: 350 },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  extendedIcon: {\n    marginRight: theme.spacing.unit,\n  },\n});\n\nclass CreateCategoryDialog extends React.Component {\n  state = {\n    open: false,\n  };\n\n  handleClickListItem = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = value => {\n    this.setState({ value, open: false });\n  };\n\n  handleOpen = value => {\n    this.setState({ value, open: true });\n  };\n\n  render() {\n    const { classes, user } = this.props;\n    return (\n      <div className={classes.root}>\n        <List>\n          <Button onClick={this.handleOpen} variant=\"contained\" color=\"primary\">\n            New\n          </Button>\n          <CreateCategoryDialogRaw\n            classes={{ paper: classes.paper }}\n            open={this.state.open}\n            onClose={this.handleClose}\n            user={user}\n          />\n        </List>\n      </div>\n    );\n  }\n}\n\nCreateCategoryDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CreateCategoryDialog);\n","import React, { Component } from 'react';\nimport { CategoryService } from '../services';\nimport { Button } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link } from 'react-router-dom';\nimport CreateCategoryDialog from '../components/CreateCategoryDialog';\n\nexport default class Categories extends Component {\n  state = { categories: null, isLoading: null };\n  componentWillMount() {\n    this.getAllCategories();\n  }\n  async getAllCategories() {\n    this.setState({ isLoading: true });\n    try {\n      let response = await CategoryService.getAllCategories();\n      if (response && response.status === 200) {\n        let data = response.data;\n\n        this.setState({\n          categories: data,\n          isLoading: false,\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async createCategory(categoryName) {\n    try {\n      const userId = this.props.user.uid;\n\n      let response = await CategoryService.createCategory(userId, categoryName);\n      if (response && response.status === 200) {\n        let data = response.data;\n\n        this.setState({\n          categories: data,\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async deleteCategory(id) {\n    try {\n      let response = await CategoryService.deleteCategory(id);\n      if (response && response.status === 200) {\n        let data = response.data;\n\n        console.log('Category deleted', data);\n        window.location.reload();\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  render() {\n    const { categories, isLoading } = this.state;\n    return (\n      <div style={{ margin: 24 }}>\n        <h2>{'My Categories'}</h2>\n        {isLoading ? (\n          'Loading...'\n        ) : (\n          <ul>\n            {categories &&\n              categories.map(category => {\n                return (\n                  <li key={category.id}>\n                    <h3>\n                      <Button>\n                        <Link\n                          to={'/category/' + category.id}\n                          style={{ textDecoration: 'none' }}\n                        >\n                          {category.categoryName}{' '}\n                        </Link>\n                      </Button>\n                      <Button\n                        onClick={this.deleteCategory.bind(this, category.id)}\n                      >\n                        <DeleteIcon />\n                      </Button>\n                    </h3>\n                  </li>\n                );\n              })}\n          </ul>\n        )}\n        <CreateCategoryDialog user={this.props.user} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { CategoryGifsService } from '../services';\nimport GifGrid from '../components/GifGrid';\nimport { Link } from 'react-router-dom';\n\nexport default class CategoryDetails extends Component {\n  state = { gifs: null, category: null };\n\n  componentWillMount() {\n    this.getCategoryGifs();\n  }\n\n  async getCategoryGifs() {\n    let match = this.props.match;\n    let id = match && match.params && match.params.id;\n    try {\n      let response = await CategoryGifsService.getCategoryGifs(id);\n      if (response && response.status === 200) {\n        let data = response.data;\n\n        this.setState({\n          category: data.category,\n          gifs: data.gifs,\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  render() {\n    let { gifs, category } = this.state;\n    return (\n      <div>\n        <h3>{category && category.categoryName + ' GIFs'}</h3>\n        {gifs && gifs.length && gifs.length >= 1 ? (\n          <GifGrid gifs={gifs} isCategoryDetails={true} />\n        ) : (\n          <Link to=\"/\">\n            <h5>Add more GIFs to this category!</h5>\n          </Link>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport withFirebaseAuth from 'react-with-firebase-auth';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport firebaseConfig from './firebaseConfig';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n//Components\nimport NavBar from './components/NavBar';\n\n//Scenes\nimport Main from './scenes/Main';\nimport Inventory from './scenes/Inventory';\nimport Categories from './scenes/Categories';\nimport CategoryDetails from './scenes/CategoryDetails';\n\nclass App extends Component {\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.user !== this.props.user) {\n      this.forceUpdate();\n    }\n  }\n  render() {\n    const { user, signOut, signInWithGoogle } = this.props;\n\n    return (\n      <div>\n        <Router>\n          <NavBar\n            signInWithGoogle={signInWithGoogle}\n            signOut={signOut}\n            user={user}\n            firebaseAppAuth={firebaseAppAuth}\n          />\n\n          <Route\n            path={'/'}\n            exact\n            render={props => <Main {...props} user={user} />}\n          />\n          <Route\n            path={'/inventory'}\n            render={props => user && <Inventory {...props} user={user} />}\n          />\n          <Route\n            path={'/categories'}\n            render={props => user && <Categories {...props} user={user} />}\n          />\n\n          <Route\n            path={'/category/:id'}\n            render={props => user && <CategoryDetails {...props} user={user} />}\n          />\n        </Router>\n      </div>\n    );\n  }\n}\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst firebaseAppAuth = firebaseApp.auth();\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\n};\n\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth,\n})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config()\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}